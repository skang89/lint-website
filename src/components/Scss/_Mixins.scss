// vars
@mixin var($property, $varName) {
  #{$property}: map-get($colors, $varName);
  #{$property}: var(--#{$varName});
}

// breakpoint mixin
@mixin mq($width, $type: min) {
  @if map_has_key($breakpoints, $width) {
    $width: map_get($breakpoints, $width);
    @if $type == max {
      $width: $width - 1px;
    }
    @media only screen and (#{$type}-width: $width) {
      @content;
    }
  }
}

// button reset
@mixin button-reset {
  border: none;
  border-radius: 0;
  margin: 0;
  padding: 0;
  overflow: visible;
  background: transparent;
  color: inherit;
  font: inherit;
  line-height: normal;
  -webkit-font-smoothing: inherit;
  -moz-osx-font-smoothing: inherit;
  appearance: none;
  cursor: pointer;

  &:-moz-focus-inner {
    border: 0;
    padding: 0;
  }
}

// font styles mixin
@mixin font-poppins($size: false, $lh: false, $ls: false) {
  font-family: "Poppins", sans-serif;
  font-stretch: normal;
  font-style: normal;
  @if $size {
    font-size: $size;
  }
  @if $lh {
    line-height: $lh;
  }
  @if $ls {
    letter-spacing: $ls;
  }
}

// triangle
@mixin triangle {
  width: 0;
  height: 0;
  border-style: solid;
  border-width: 0 8px 8px 8px;
  border-color: transparent transparent #000000 transparent;
}

// dividing border
@mixin divider($bcolor: false) {
  position: relative;

  &:before {
    content: "";
    position: absolute;
    top: 0;
    right: 0;
    left: 0;
    border-top: 1px solid;
    @if $bcolor {
      border-color: $bcolor;
    }
  }
}
