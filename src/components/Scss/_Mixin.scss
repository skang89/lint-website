// map root colors
@mixin var($property, $varName) {
  #{$property}: map-get($colors, $varName);
  #{$property}: var(--#{$varName});
}

// media queries
@mixin mq($width, $type: min) {
  @if map_has_key($breakpoints, $width) {
    $width: map_get($breakpoints, $width);
    @if $type == max {
      $width: $width - 1px;
    }
    @media only screen and (#{$type}-width: $width) {
      @content;
    }
  }
}

// reset button styles
@mixin button-reset {
  padding: 0;
  border: none;
  color: inherit;
  background-color: transparent;
  font-size: 0.875rem;
  cursor: pointer;
}

// styling pseudo before and after content
@mixin pseudo($display: block, $pos: absolute, $content: "") {
  content: $content;
  display: $display;
  position: $pos;
}

// responsive image ratio
@mixin responsive-ratio($x, $y, $pseudo: false) {
  $padding: unquote(($y / $x) * 100 + "%");
  @if $pseudo {
    &:before {
      @include pseudo($pos: relative);
      width: 100%;
      padding-top: $padding;
    }
  } @else {
    padding-top: $padding;
  }
}
